// 1
#include <stdio.h>

int find_max(int arr[], int size)
{
    int max = arr[0];
    for (int i = 1; i < size; i++)
    {
        if (arr[i] > max)
        {
            max = arr[i];
        }
    }
    return max;
}

int main()
{
    int arr[] = {5, 2, 8, 1, 9, 4};
    int size = sizeof(arr) / sizeof(arr[0]);
    int max = find_max(arr, size);
    printf("The greatest number in the array is: %d", max);
    return 0;
}

// 2
#include <stdio.h>

int find_min(int arr[], int size)
{
    int min = arr[0];
    for (int i = 1; i < size; i++)
    {
        if (arr[i] < min)
        {
            min = arr[i];
        }
    }
    return min;
}

int main()
{
    int arr[] = {5, 2, 8, 1, 9, 4};
    int size = sizeof(arr) / sizeof(arr[0]);
    int min = find_min(arr, size);
    printf("The smallest number in the array is: %d", min);
    return 0;
}

// 3
#include <stdio.h>

void sort_array(int arr[], int size)
{
    int temp;
    for (int i = 0; i < size; i++)
    {
        for (int j = i + 1; j < size; j++)
        {
            if (arr[i] > arr[j])
            {
                temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
    }
}

int main()
{
    int arr[] = {5, 2, 8, 1, 9, 4};
    int size = sizeof(arr) / sizeof(arr[0]);
    sort_array(arr, size);
    printf("The sorted array is: ");
    for (int i = 0; i < size; i++)
    {
        printf("%d ", arr[i]);
    }
    return 0;
}
// 04
#include <stdio.h>

void rotate_array(int arr[], int size, int n, char direction)
{
    int temp[size];

    for (int i = 0; i < size; i++)
    {
        temp[i] = arr[i];
    }

    if (direction == 'l')
    {
        for (int i = 0; i < size; i++)
        {
            arr[(i + size - n) % size] = temp[i];
        }
    }
    else if (direction == 'r')
    {
        for (int i = 0; i < size; i++)
        {
            arr[(i + n) % size] = temp[i];
        }
    }
}

int main()
{
    int arr[] = {32, 29, 40, 12, 70};
    int size = sizeof(arr) / sizeof(arr[0]);
    int n = 2;
    char direction = 'l';

    printf("Original Array: ");
    for (int i = 0; i < size; i++)
    {
        printf("%d ", arr[i]);
    }

    rotate_array(arr, size, n, direction);

    printf("\nRotated Array: ");
    for (int i = 0; i < size; i++)
    {
        printf("%d ", arr[i]);
    }

    return 0;
}

// 05
#include <stdio.h>

int findadj(int arr[], int size)
{
    for (int i = 0; i < size - 1; i++)
    {
        if (arr[i] == arr[i + 1])
        {
            return arr[i];
        }
    }
    return -1; // If no adjacent duplicates found
}

int main()
{
    int arr[] = {1, 2, 2, 3, 4, 4, 4, 5};
    int size = sizeof(arr) / sizeof(arr[0]);
    int result = findadj(arr, size);
    if (result == -1)
    {
        printf("No adjac duplicates found.\n");
    }
    else
    {
        printf("First adjacnt duplicate found: %d\n", result);
    }
    return 0;
}

//6
#include <stdio.h>

void reverseArray(int arr[], int size)
{
    printf("Reversed array: ");
    for (int i = size - 1; i >= 0; i--)
    {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

int main()
{
    int arr[50];
    int size;

    printf("Enter the size of array: ");
    scanf("%d", &size);

    printf("Enter %d elements in array:\n", size);
    for (int i = 0; i < size; i++)
    {
        scanf("%d", &arr[i]);
    }

    reverseArray(arr, size);

    return 0;
}
//7

#include <stdio.h>

int countDuplicate(int arr[], int size)
{
    int count = 0;
    for (int i = 0; i < size; i++)
    {
        for (int j = i + 1; j < size; j++)
        {
            if (arr[i] == arr[j])
            {
                count++;
                break;
            }
        }
    }
    return count;
}

int main()
{
    int arr[] = {1, 2, 2, 3, 4, 4, 4, 5};
    int size = sizeof(arr) / sizeof(arr[0]);
    int count = countDuplicate(arr, size);
    printf("Number of duplicate elements: %d\n", count);
    return 0;
}



//08
#include <stdio.h>

void prinuniq(int arr[], int size)
{
    printf("Unique elements: ");
    for (int i = 0; i < size; i++)
    {
        int j;
        for (j = 0; j < i; j++)
        {
            if (arr[i] == arr[j])
            {
                break;
            }
        }
        if (i == j)
        {
            printf("%d ", arr[i]);
        }
    }
    printf("\n");
}

int main()
{
    int arr[] = {1, 2, 2, 3, 4, 4, 4, 5};
    int size = sizeof(arr) / sizeof(arr[0]);
    prinuniq(arr, size);
    return 0;
}

//09
#include <stdio.h>

void merge(int arr1[], int arr2[], int size, int result[])
{
    int i = 0, j = 0, k = 0;
    while (i < size && j < size)
    {
        if (arr1[i] > arr2[j])
        {
            result[k] = arr1[i];
            i++;
        }
        else
        {
            result[k] = arr2[j];
            j++;
        }
        k++;
    }
    while (i < size)
    {
        result[k] = arr1[i];
        i++;
        k++;
    }
    while (j < size)
    {
        result[k] = arr2[j];
        j++;
        k++;
    }
}

int main()
{
    int arr1[] = {10, 8, 6, 4, 2};
    int arr2[] = {9, 7, 5, 3, 1};
    int size = 5;
    int result[10];

    merge(arr1, arr2, size, result);

    printf("Merged array: ");
    for (int i = 0; i < size * 2; i++)
    {
        printf("%d ", result[i]);
    }
    printf("\n");

    return 0;
}

//10
#include <stdio.h>
#include <iostream>
using namespace std;
void countF(int arr[], int size)
{
    int f[size];
    int visited = -1;

    for (int i = 0; i < size; i++)
    {
        f[i] = 0;
    }

    for (int i = 0; i < size; i++)
    {
        int count = 1;
        for (int j = i + 1; j < size; j++)
        {
            if (arr[i] == arr[j])
            {
                count++;
                f[j] = visited;
            }
        }
        if (f[i] != visited)
        {
            f[i] = count;
        }
    }

    printf("Element\tFrequency\n");
    for (int i = 0; i < size; i++)
    {
        if (f[i] != visited)
        {
            printf("%d\t%d\n", arr[i], f[i]);
        }
    }
}

int main()
{
    // int arr[] = {1, 2, 3, 2, 1, 2, 3, 4};
    int arr[20];
    cout << " enter 10 nums in array :- ";
    // printf(" Enter the 10 nums in array :- ");

    for (int i = 0; i < 20; i++)

        cin >> arr[i];
    // scanf("%d", &arr[i])

    int size = sizeof(arr) / sizeof(arr[0]);

    countF(arr, size);

    return 0;
}
